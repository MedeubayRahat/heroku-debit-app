{"ast":null,"code":"var _jsxFileName = \"/Users/lemarguesse/Desktop/debit-card/src/DebitForm/DebitForm.js\",\n    _s = $RefreshSig$();\n\nimport './DebitForm.css';\nimport { useState } from \"react\";\nimport { DebitCard } from \"../DebitCard/DebitCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DebitForm = () => {\n  _s();\n\n  const [errorCVV, setErrorCVV] = useState(false);\n  const [errorName, setErrorName] = useState(false);\n  const [errorCard, setErrorCard] = useState(false);\n  const [errorDate, setErrorDate] = useState(false);\n  const [card, setCard] = useState('');\n  const [expiration, setExpiration] = useState('');\n\n  const cvvHandler = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value.length < 3 || isNaN(value)) {\n      setErrorCVV(true);\n    } else {\n      setErrorCVV(false);\n    }\n  };\n\n  const dateHandler = e => {\n    const {\n      value\n    } = e.target;\n    let date = new Date(value);\n    let currDate = new Date();\n\n    if (currDate > date) {\n      setErrorDate(true);\n    } else {\n      setErrorDate(false);\n      let expirationDateMonth = date.getMonth() + 1;\n      let expirationDateYear = date.getFullYear() % 2000;\n      setExpiration(expirationDateMonth + '/' + expirationDateYear);\n    }\n  };\n\n  const cardHandler = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value.length !== 16 || isNaN(value)) {\n      setErrorCard(true);\n    } else {\n      setErrorCard(false);\n      setCard(card.slice(0, 4) + ' ' + card.slice(4, 8) + ' ' + card.slice(8, 12) + card.slice(12, 16));\n    }\n  };\n\n  const nameHandler = e => {\n    const {\n      value\n    } = e.target;\n\n    if (value.length < 2) {\n      setErrorName(true);\n    } else {\n      setErrorName(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"debit-form_block\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debit-form_inner\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"debit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"debit-input-text\",\n          children: [\"Card number\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"debit-input\",\n            type: \"text\",\n            required: true,\n            onChange: cardHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), errorCard ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: [\"Card number should be 16 size long \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 99\n            }, this), \" and contain only numbers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 38\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"debit-input-text\",\n          children: [\"Valid thru\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"debit-input\",\n            type: \"date\",\n            required: true,\n            onChange: dateHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), errorDate ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Date is expired or not entered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 38\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"debit-input-text\",\n          children: [\"CVV\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"debit-input\",\n            type: \"text\",\n            required: true,\n            onChange: cvvHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), errorCVV ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"CVV includes 3 letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"debit-input-text\",\n          children: [\"Cardholder name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"debit-input\",\n            type: \"text\",\n            required: true,\n            onChange: nameHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), errorName ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Name should contain at least 2 letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 38\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"debit-submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DebitCard, {\n      cardNumber: card,\n      expiration: expiration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DebitForm, \"BXRL2m6XsMe6ZRTDNAaj4H3HW5k=\");\n\n_c = DebitForm;\nexport default DebitForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DebitForm\");","map":{"version":3,"names":["useState","DebitCard","DebitForm","errorCVV","setErrorCVV","errorName","setErrorName","errorCard","setErrorCard","errorDate","setErrorDate","card","setCard","expiration","setExpiration","cvvHandler","e","value","target","length","isNaN","dateHandler","date","Date","currDate","expirationDateMonth","getMonth","expirationDateYear","getFullYear","cardHandler","slice","nameHandler"],"sources":["/Users/lemarguesse/Desktop/debit-card/src/DebitForm/DebitForm.js"],"sourcesContent":["import './DebitForm.css';\nimport {useState} from \"react\";\nimport {DebitCard} from \"../DebitCard/DebitCard\";\n\nconst DebitForm = () => {\n\n    const [errorCVV, setErrorCVV] = useState(false);\n    const [errorName, setErrorName] = useState(false);\n    const [errorCard, setErrorCard] = useState(false);\n    const [errorDate, setErrorDate] = useState(false);\n\n    const [card, setCard] = useState('');\n    const [expiration, setExpiration] = useState('');\n\n    const cvvHandler = (e) => {\n        const { value } = e.target;\n\n        if (value.length < 3 || isNaN(value)) {\n            setErrorCVV(true);\n        } else {\n            setErrorCVV(false);\n        }\n    }\n\n    const dateHandler = (e) => {\n        const { value } = e.target;\n\n        let date = new Date(value);\n        let currDate = new Date();\n        if (currDate > date) {\n            setErrorDate(true);\n        } else {\n            setErrorDate(false);\n            let expirationDateMonth = date.getMonth() + 1;\n            let expirationDateYear = date.getFullYear() % 2000;\n            setExpiration(expirationDateMonth + '/' + expirationDateYear);\n        }\n    }\n\n    const cardHandler = (e) => {\n        const { value } = e.target;\n        if (value.length !== 16 || isNaN(value)) {\n            setErrorCard(true);\n        } else {\n            setErrorCard(false);\n            setCard(card.slice(0, 4) + ' ' + card.slice(4, 8) + ' ' + card.slice(8, 12) + card.slice(12, 16));\n        }\n    }\n\n    const nameHandler = (e) => {\n        const { value } = e.target;\n\n        if (value.length < 2) {\n            setErrorName(true);\n        } else {\n            setErrorName(false);\n        }\n    }\n\n    return (\n        <div className='debit-form_block'>\n            <div className='debit-form_inner'>\n                <form className='debit-form'>\n                    <label className='debit-input-text'>\n                        Card number\n                        <input className='debit-input' type='text' required onChange={cardHandler}/>\n                        {errorCard ? <p className='error-text'>Card number should be 16 size long <br/> and contain only numbers</p> : null}\n                    </label>\n                    <label className='debit-input-text'>\n                        Valid thru\n                        <input className='debit-input' type='date' required onChange={dateHandler}/>\n                        {errorDate ? <p className='error-text'>Date is expired or not entered</p> : null}\n                    </label>\n                    <label className='debit-input-text'>\n                        CVV\n                        <input className='debit-input' type='text' required onChange={cvvHandler}/>\n                        {errorCVV ? <p className='error-text'>CVV includes 3 letters</p> : null}\n                    </label>\n                    <label className='debit-input-text'>\n                        Cardholder name\n                        <input className='debit-input' type='text' required onChange={nameHandler}/>\n                        {errorName ? <p className='error-text'>Name should contain at least 2 letters</p> : null}\n                    </label>\n                    <button type='submit' className='debit-submit'>Submit</button>\n                </form>\n            </div>\n            <DebitCard cardNumber = {card} expiration = {expiration} />\n        </div>\n    )\n}\n\nexport default DebitForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}